# place passkey here for memory
import email, smtplib, ssl, json
from PROVIDERS import PROVIDERS
import time
from datetime import datetime

from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase

from email import encoders

from os.path import basename

# variable for loop
loop = True

def send_sms_via_email(
    number: str,
    message: str,
    provider: str,
    sender_credentials: tuple,
    subject: str = " ", # insert subject
    smtp_server: str = "smtp.gmail.com",
    smtp_port: int = 465,
):
    sender_email, email_password = sender_credentials
    receiver_email = f'{number}@{PROVIDERS.get(provider).get("sms")}' # sms

    email_message = f"Subject:{subject}\nTo:{receiver_email}\n{message}"

    with smtplib.SMTP_SSL(
        smtp_server, smtp_port, context=ssl.create_default_context()
        ) as email:
            email.login(sender_email, email_password)
            email.sendmail(sender_email, receiver_email, email_message)


def send_mms_via_email(
    number: str,
    message: str,
    file_path: str,
    mime_maintype: str,
    mime_subtype: str,
    provider: str,
    sender_credentials: tuple,
    subject: str = " ",
    smtp_server: str = "smtp.gmail.com",
    smtp_port: int = 465,
):
    sender_email, email_password = sender_credentials
    receiver_email = f'{number}@{PROVIDERS.get(provider).get("mms")}' # mms

    email_message = MIMEMultipart()
    email_message["Subject"] = subject
    email_message["To"] = receiver_email
    email_message["From"] = sender_email

    email_message.attach(MIMEText(message, "plain"))

    with open(file_path, "rb") as attachment:
         part = MIMEBase(mime_maintype, mime_subtype)
         part.set_payload(attachment.read())

         encoders.encode_base64(part)
         part.add_header(
              "Content Disposition", f"attachment; filename={basename(file_path)}"
         )

         email_message.attach(part)
    text = email_message.as_string()

    with smtplib.SMTP_SSL(
        smtp_server, smtp_port, context=ssl.create_default_context()
        ) as email:
            email.login(sender_email, email_password)
            email.sendmail(sender_email, receiver_email, text)

def main(): 
    number = "" #insert phone number receiver
    message = "" #insert message
    provider = "" #insert message from PROVIDERS.py
    sender_credentials = ("", "") #input (email, emailtosms passkey) which can be found on your google account
    file_path = "" #insert image for mms
    mime_maintype = "image"
    mime_subtype = "" #give classification, ex. png, jpg
    # comment out to switch between mms and sms
    send_sms_via_email(number, message, provider, sender_credentials) 
    #send_mms_via_email(number, message, file_path, mime_maintype, mime_subtype, provider, sender_credentials) #change between mms and sms


#loop for time
'''
if __name__ == "__main__":
    while loop == True:
        # time variables
        timer = datetime.now()
        currentTime = timer.strftime('%H:%M:%S')
        if currentTime >= ('20:12:0'): 
            print("The Current Time Is ", currentTime)
            main()
            loop = False
        else:
            # timer so pc doesnt blow up
            for n in reversed(range(0,1)):
                time.sleep(1)
                if n <= 0:
                    print (currentTime)
                    '''
